cmake_minimum_required(VERSION 3.12)
project(hdf5-test LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/build)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../binary)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")

set(SOURCES
    sources/main.cpp
    sources/test.cpp
)

find_package(MPI REQUIRED)
set(LIBRARIES_ROOT "~/libraries/")
set(HDF5_CPP_LIBRARY_FILE "libhdf5_cpp.so")
set(HDF5_LIBRARY_FILE "libhdf5.so")

set(VOL_INCLUDE_DIR "~/libraries/vol/include")
set(VOL_CACHE_OBJECT "~/libraries/vol/lib/libh5cache_vol.so")
set(VOL_ASYNC_OBJECT "~/libraries/vol/")


set(HDF5_VARIANT "hdf5_no_staging")

set(HDF5_PATH "${LIBRARIES_ROOT}${HDF5_VARIANT}")
set(HDF5_INCLUDE_DIR "${HDF5_PATH}/include")
set(HDF5_CPP_OBJECT "${HDF5_PATH}/lib/${HDF5_CPP_LIBRARY_FILE}")
set(HDF5_OBJECT "${HDF5_PATH}/lib/${HDF5_LIBRARY_FILE}")

set(ABT_INCLUDE_DIR "${LIBRARIES_ROOT}/argobots/include")
set(ABT_OBJECT "${LIBRARIES_ROOT}/argobots/lib/libabt.so")

set(CMAKE_INSTALL_RPATH ${HDF5_PATH})
set(CMAKE_BUILD_RPATH ${HDF5_PATH})
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

include_directories(${HDF5_INCLUDE_DIR} ${VOL_INCLUDE_DIR} ${MPI_INCLUDE_PATH} ${ABT_INCLUDE_DIR})
add_executable(${PROJECT_NAME}_${HDF5_VARIANT} ${SOURCES})
target_link_libraries(${PROJECT_NAME}_${HDF5_VARIANT} PRIVATE ${HDF5_CPP_OBJECT} ${HDF5_OBJECT} ${VOL_CACHE_OBJECT} ${MPI_CXX_LIBRARIES} ${ABT_OBJECT})


set(HDF5_VARIANT "hdf5_staging_memory_optimized")
set(HDF5_PATH "${LIBRARIES_ROOT}${HDF5_VARIANT}")
set(HDF5_INCLUDE_DIR "${HDF5_PATH}/include")
set(HDF5_CPP_OBJECT "${HDF5_PATH}/lib/${HDF5_CPP_LIBRARY_FILE}")
set(HDF5_OBJECT "${HDF5_PATH}/lib/${HDF5_LIBRARY_FILE}")

set(CMAKE_INSTALL_RPATH ${HDF5_PATH})
set(CMAKE_BUILD_RPATH ${HDF5_PATH})
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

include_directories(${HDF5_INCLUDE_DIR} ${VOL_INCLUDE_DIR} ${MPI_INCLUDE_PATH} ${ABT_INCLUDE_DIR})
add_executable(${PROJECT_NAME}_${HDF5_VARIANT} ${SOURCES})
target_link_libraries(${PROJECT_NAME}_${HDF5_VARIANT} PRIVATE ${HDF5_CPP_OBJECT} ${HDF5_OBJECT} ${VOL_CACHE_OBJECT} ${MPI_CXX_LIBRARIES} ${ABT_OBJECT})


set(HDF5_VARIANT "hdf5_staging_disk_optimized")

set(HDF5_PATH "${LIBRARIES_ROOT}${HDF5_VARIANT}")
set(HDF5_INCLUDE_DIR "${HDF5_PATH}/include")
set(HDF5_CPP_OBJECT "${HDF5_PATH}/lib/${HDF5_CPP_LIBRARY_FILE}")
set(HDF5_OBJECT "${HDF5_PATH}/lib/${HDF5_LIBRARY_FILE}")


set(CMAKE_INSTALL_RPATH ${HDF5_PATH})
set(CMAKE_BUILD_RPATH ${HDF5_PATH})
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

include_directories(${HDF5_INCLUDE_DIR} ${VOL_INCLUDE_DIR} ${MPI_INCLUDE_PATH} ${ABT_INCLUDE_DIR})
add_executable(${PROJECT_NAME}_${HDF5_VARIANT} ${SOURCES})
target_link_libraries(${PROJECT_NAME}_${HDF5_VARIANT} PRIVATE ${HDF5_CPP_OBJECT} ${HDF5_OBJECT} ${VOL_CACHE_OBJECT} ${MPI_CXX_LIBRARIES} ${ABT_OBJECT})


set(HDF5_VARIANT "hdf5_vol_prepared")

set(HDF5_PATH "/usr/local/HDF_Group/HDF5/1.15.0")
set(HDF5_INCLUDE_DIR "${HDF5_PATH}/include")
set(HDF5_CPP_OBJECT "${HDF5_PATH}/lib/${HDF5_CPP_LIBRARY_FILE}")
set(HDF5_OBJECT "${HDF5_PATH}/lib/${HDF5_LIBRARY_FILE}")

set(CMAKE_INSTALL_RPATH ${HDF5_PATH})
set(CMAKE_BUILD_RPATH ${HDF5_PATH})
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

include_directories(${HDF5_INCLUDE_DIR} ${VOL_INCLUDE_DIR} ${MPI_INCLUDE_PATH} ${ABT_INCLUDE_DIR})
add_executable(${PROJECT_NAME}_${HDF5_VARIANT} ${SOURCES})
target_link_libraries(${PROJECT_NAME}_${HDF5_VARIANT} PRIVATE ${HDF5_CPP_OBJECT} ${HDF5_OBJECT} ${VOL_CACHE_OBJECT} ${MPI_CXX_LIBRARIES} ${ABT_OBJECT})
